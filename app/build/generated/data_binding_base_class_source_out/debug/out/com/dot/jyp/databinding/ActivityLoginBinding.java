// Generated by view binder compiler. Do not edit!
package com.dot.jyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.dot.jyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final Button btnLoginFindPwd;

  @NonNull
  public final Button btnLoginRegister;

  @NonNull
  public final EditText edittextLoginEmail;

  @NonNull
  public final EditText edittextLoginPwd;

  @NonNull
  public final ImageView imgLoginLogo;

  @NonNull
  public final LinearLayout llLoginBtnSet;

  @NonNull
  public final Button loginAutoBtn;

  @NonNull
  public final ImageView loginAutoImg;

  @NonNull
  public final LinearLayout loginAutoLl;

  @NonNull
  public final TextView textLoginEmail;

  @NonNull
  public final TextView textLoginNoAccount;

  @NonNull
  public final TextView textLoginPwd;

  @NonNull
  public final TextView textLoginWrong;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLogin,
      @NonNull Button btnLoginFindPwd, @NonNull Button btnLoginRegister,
      @NonNull EditText edittextLoginEmail, @NonNull EditText edittextLoginPwd,
      @NonNull ImageView imgLoginLogo, @NonNull LinearLayout llLoginBtnSet,
      @NonNull Button loginAutoBtn, @NonNull ImageView loginAutoImg,
      @NonNull LinearLayout loginAutoLl, @NonNull TextView textLoginEmail,
      @NonNull TextView textLoginNoAccount, @NonNull TextView textLoginPwd,
      @NonNull TextView textLoginWrong) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.btnLoginFindPwd = btnLoginFindPwd;
    this.btnLoginRegister = btnLoginRegister;
    this.edittextLoginEmail = edittextLoginEmail;
    this.edittextLoginPwd = edittextLoginPwd;
    this.imgLoginLogo = imgLoginLogo;
    this.llLoginBtnSet = llLoginBtnSet;
    this.loginAutoBtn = loginAutoBtn;
    this.loginAutoImg = loginAutoImg;
    this.loginAutoLl = loginAutoLl;
    this.textLoginEmail = textLoginEmail;
    this.textLoginNoAccount = textLoginNoAccount;
    this.textLoginPwd = textLoginPwd;
    this.textLoginWrong = textLoginWrong;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_login;
      Button btnLogin = rootView.findViewById(id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btn_login_find_pwd;
      Button btnLoginFindPwd = rootView.findViewById(id);
      if (btnLoginFindPwd == null) {
        break missingId;
      }

      id = R.id.btn_login_register;
      Button btnLoginRegister = rootView.findViewById(id);
      if (btnLoginRegister == null) {
        break missingId;
      }

      id = R.id.edittext_login_email;
      EditText edittextLoginEmail = rootView.findViewById(id);
      if (edittextLoginEmail == null) {
        break missingId;
      }

      id = R.id.edittext_login_pwd;
      EditText edittextLoginPwd = rootView.findViewById(id);
      if (edittextLoginPwd == null) {
        break missingId;
      }

      id = R.id.img_login_logo;
      ImageView imgLoginLogo = rootView.findViewById(id);
      if (imgLoginLogo == null) {
        break missingId;
      }

      id = R.id.ll_login_btn_set;
      LinearLayout llLoginBtnSet = rootView.findViewById(id);
      if (llLoginBtnSet == null) {
        break missingId;
      }

      id = R.id.login_auto_btn;
      Button loginAutoBtn = rootView.findViewById(id);
      if (loginAutoBtn == null) {
        break missingId;
      }

      id = R.id.login_auto_img;
      ImageView loginAutoImg = rootView.findViewById(id);
      if (loginAutoImg == null) {
        break missingId;
      }

      id = R.id.login_auto_ll;
      LinearLayout loginAutoLl = rootView.findViewById(id);
      if (loginAutoLl == null) {
        break missingId;
      }

      id = R.id.text_login_email;
      TextView textLoginEmail = rootView.findViewById(id);
      if (textLoginEmail == null) {
        break missingId;
      }

      id = R.id.text_login_no_account;
      TextView textLoginNoAccount = rootView.findViewById(id);
      if (textLoginNoAccount == null) {
        break missingId;
      }

      id = R.id.text_login_pwd;
      TextView textLoginPwd = rootView.findViewById(id);
      if (textLoginPwd == null) {
        break missingId;
      }

      id = R.id.text_login_wrong;
      TextView textLoginWrong = rootView.findViewById(id);
      if (textLoginWrong == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnLogin, btnLoginFindPwd,
          btnLoginRegister, edittextLoginEmail, edittextLoginPwd, imgLoginLogo, llLoginBtnSet,
          loginAutoBtn, loginAutoImg, loginAutoLl, textLoginEmail, textLoginNoAccount, textLoginPwd,
          textLoginWrong);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
