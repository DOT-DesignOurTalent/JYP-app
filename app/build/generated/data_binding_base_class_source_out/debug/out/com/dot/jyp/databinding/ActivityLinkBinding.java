// Generated by view binder compiler. Do not edit!
package com.dot.jyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.dot.jyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLinkBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLinkCopy;

  @NonNull
  public final Button btnLinkEnter;

  @NonNull
  public final ImageView imageLinkLetter;

  @NonNull
  public final TextView textLinkComment;

  @NonNull
  public final Toolbar toolbarLinkActionbar;

  private ActivityLinkBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLinkCopy,
      @NonNull Button btnLinkEnter, @NonNull ImageView imageLinkLetter,
      @NonNull TextView textLinkComment, @NonNull Toolbar toolbarLinkActionbar) {
    this.rootView = rootView;
    this.btnLinkCopy = btnLinkCopy;
    this.btnLinkEnter = btnLinkEnter;
    this.imageLinkLetter = imageLinkLetter;
    this.textLinkComment = textLinkComment;
    this.toolbarLinkActionbar = toolbarLinkActionbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLinkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLinkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_link, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLinkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_link_copy;
      Button btnLinkCopy = rootView.findViewById(id);
      if (btnLinkCopy == null) {
        break missingId;
      }

      id = R.id.btn_link_enter;
      Button btnLinkEnter = rootView.findViewById(id);
      if (btnLinkEnter == null) {
        break missingId;
      }

      id = R.id.image_link_letter;
      ImageView imageLinkLetter = rootView.findViewById(id);
      if (imageLinkLetter == null) {
        break missingId;
      }

      id = R.id.text_link_comment;
      TextView textLinkComment = rootView.findViewById(id);
      if (textLinkComment == null) {
        break missingId;
      }

      id = R.id.toolbar_link_actionbar;
      Toolbar toolbarLinkActionbar = rootView.findViewById(id);
      if (toolbarLinkActionbar == null) {
        break missingId;
      }

      return new ActivityLinkBinding((ConstraintLayout) rootView, btnLinkCopy, btnLinkEnter,
          imageLinkLetter, textLinkComment, toolbarLinkActionbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
